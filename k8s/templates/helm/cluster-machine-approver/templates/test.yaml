---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-machine-approver
  namespace: fraima-ccm

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:cluster-machine-approver
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:cluster-machine-approver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cluster-machine-approver
subjects:
  - kind: ServiceAccount
    name: cluster-machine-approver
    namespace: fraima-ccm

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-machine-approver
  labels:
    k8s-app: cluster-machine-approver
  namespace: fraima-ccm
spec:
  selector:
    matchLabels:
      k8s-app: cluster-machine-approver
  template:
    metadata:
      labels:
        k8s-app: cluster-machine-approver
    spec:
      # hostNetwork: false
      # dnsPolicy: Default
      serviceAccountName: cluster-machine-approver
      nodeSelector:
        # The CCM will only run on masters
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        # this taint is set on all nodes when an external CCM is used
        # so we should tolerate it to schedule our CCM
        - key: "node.cloudprovider.kubernetes.io/uninitialized"
          value: "true"
          effect: "NoSchedule"
        # CCM should be able to run on masters
        - key: "node-role.kubernetes.io/control-plane"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          effect: "NoSchedule"
        - key: "CriticalAddonsOnly"
          operator: "Exists"
      containers:
        - image: dobrykot/cluster-machine-approver:v1.0.11
          name: cluster-machine-approver
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
          env:
            - name: YANDEX_AIM_JSON
              valueFrom:
                secretKeyRef:
                  name: yandex-cloud
                  key: service-account-json
            - name: YANDEX_FOLDER_ID
              valueFrom:
                secretKeyRef:
                  name: yandex-cloud
                  key: folder-id
            - name: INSTANCE_NAME_LAYOUT
              value: '^\w*:\w*:(.*)'
            - name: KubeHost
              value: "kubernetes.default"