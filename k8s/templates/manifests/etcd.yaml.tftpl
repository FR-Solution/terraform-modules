---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: etcd
    tier: control-plane
  name: etcd
  namespace: kube-system
spec:
  containers:
  - name: etcd
    command:
      - etcd
    args:
    - --discovery-srv=${cluster_name}.${base_domain}
    - --name=${full_instance_name}
    - --initial-advertise-peer-urls=https://${full_instance_name}:${etcd-peer-port}
    - --advertise-client-urls=https://${full_instance_name}:${etcd-server-port}
    - --trusted-ca-file=${ssl.intermediate["etcd-ca"].host_path}/etcd-ca.pem
    - --cert-file=${ssl.intermediate["etcd-ca"].issuers["etcd-peer"].certificates["etcd-server"].key-keeper-args.host_path}/etcd-server.pem
    - --key-file=${ssl.intermediate["etcd-ca"].issuers["etcd-peer"].certificates["etcd-server"].key-keeper-args.host_path}/etcd-server-key.pem
    - --peer-trusted-ca-file=${ssl.intermediate["etcd-ca"].host_path}/etcd-ca.pem
    - --peer-cert-file=${ssl.intermediate["etcd-ca"].issuers["etcd-peer"].certificates["etcd-peer"].key-keeper-args.host_path}/etcd-peer.pem
    - --peer-key-file=${ssl.intermediate["etcd-ca"].issuers["etcd-peer"].certificates["etcd-peer"].key-keeper-args.host_path}/etcd-peer-key.pem
    - --listen-client-urls=https://0.0.0.0:${etcd-server-port},https://0.0.0.0:${etcd-server-port-target-lb}
    - --listen-peer-urls=https://0.0.0.0:${etcd-peer-port}
    - --listen-metrics-urls=http://0.0.0.0:${etcd-metrics-port}
    - --initial-cluster-token=etcd
    - --initial-cluster-state=new
    - --data-dir=/var/lib/etcd
    - --strict-reconfig-check=true
    - --peer-client-cert-auth=true
    - --peer-auto-tls=true
    - --client-cert-auth=true
    - --snapshot-count=10000
    - --heartbeat-interval=250
    - --election-timeout=1500
    - --quota-backend-bytes=0
    - --max-snapshots=10
    - --max-wals=10
    - --discovery-fallback=proxy
    - --auto-compaction-retention=8
    - --force-new-cluster=false
    - --enable-v2=false
    - --proxy=off
    - --proxy-failure-wait=5000
    - --proxy-refresh-interval=30000
    - --proxy-dial-timeout=1000
    - --proxy-write-timeout=5000
    - --proxy-read-timeout=0
    - --metrics=extensive
    - --logger=zap
    image: ${etcd-image}:${etcd-version}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /health
        port: ${etcd-metrics-port}
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /health
        port: ${etcd-metrics-port}
        scheme: HTTP
    volumeMounts:
    - mountPath: /var/lib/etcd
      name: etcd-data
    - mountPath: ${base_local_path_certs}/certs/etcd
      name: etcd-certs
    - mountPath: ${base_local_path_certs}/ca
      name: ca
  hostNetwork: true
  priorityClassName: system-node-critical
  securityContext:
      null
  volumes:
  - hostPath:
      path: ${base_local_path_certs}/certs/etcd
      type: DirectoryOrCreate
    name: etcd-certs
  - hostPath:
      path: ${base_local_path_certs}/ca
      type: DirectoryOrCreate
    name: ca
  - hostPath:
      path: /var/lib/etcd
      type: DirectoryOrCreate
    name: etcd-data
status: {}
