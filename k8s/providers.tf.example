terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
  # experiments = [module_variable_optional_attrs]
}

provider "yandex" {
  token     = ""
  cloud_id  = ""
  folder_id = ""
  zone      = ""
}

provider "vault" {
    address = ""
    token = ""
}


# configure keycloak provider
provider "keycloak" {
  realm                     = "master"
  client_id                 = "admin-cli"
  username                  = ""
  password                  = ""
  url                       = ""
  root_ca_certificate       = ""
  tls_insecure_skip_verify  = true

}

resource "vault_pki_secret_backend_cert" "terraform-kubeconfig" {
  depends_on = [
    module.k8s-yandex-cluster
  ]
    backend       = module.k8s-yandex-cluster.k8s_global_vars.ssl.intermediate.kubernetes-ca.path
    name          = "kube-apiserver-cluster-admin-client"
    common_name   = "custom:terraform-kubeconfig"
}

provider "kubernetes" {
  host = https://${local.api_address}:6443"

  client_certificate     = vault_pki_secret_backend_cert.terrafor-kubeconfig.certificate
  client_key             = vault_pki_secret_backend_cert.terrafor-kubeconfig.private_key
  cluster_ca_certificate = vault_pki_secret_backend_cert.terrafor-kubeconfig.issuing_ca
}

provider "helm" {
  kubernetes {
    host = https://${local.api_address}:6443"

    client_certificate     = vault_pki_secret_backend_cert.terrafor-kubeconfig.certificate
    client_key             = vault_pki_secret_backend_cert.terrafor-kubeconfig.private_key
    cluster_ca_certificate = vault_pki_secret_backend_cert.terrafor-kubeconfig.issuing_ca

  }
}