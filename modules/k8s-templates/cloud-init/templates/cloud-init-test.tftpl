#cloud-config
version: v1

hostname: ${hostname}
users:
  - name: dkot
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    shell: /bin/bash
    lock_passwd: true
    ssh_authorized_keys:
      - ${ ssh_key }

packages:
  - wget
  - jq
  - tree
  - irqbalance
  - net-tools
  - socat 
  - conntrack
  - ipset
  - ethtool
  - unzip
  - xfsprogs

# https://kubernetes.io/docs/setup/production-environment/container-runtimes/
bootcmd:
  - sudo modprobe overlay
  - sudo modprobe br_netfilter
  - sudo sysctl --system

# Проверялось только для Yandex Cloud
# device_aliases: {'etcd-data': '/dev/disk/by-id/virtio-etcd-data'}

disk_setup:
  /dev/disk/by-id/virtio-etcd-data:
    table_type: 'gpt'
    overwrite: true

fs_setup:
  - label: etcd_data
    filesystem: 'ext4'
    device: /dev/disk/by-id/virtio-etcd-data
    partition: auto
    overwrite: true

### TODO 
### {"level":"warn","ts":"2022-10-17T00:44:38.354Z","caller":"etcdmain/etcd.go:446","msg":"found invalid file under data directory","filename":"lost+found","data-dir":"/var/lib/etcd"}
### {"level":"warn","ts":"2022-10-17T00:44:38.354Z","caller":"embed/config.go:848","msg":"ignoring peer auto TLS since certs given"}
### {"level":"warn","ts":1665967478.3572063,"caller":"fileutil/fileutil.go:57","msg":"check file permission","error":"directory \"/var/lib/etcd\" exist, but the permission is \"drwxr-xr-x\". The recommended permission is \"-rwx------\" to prevent possible unprivileged access to the data"}

mounts:
  - [ "/dev/disk/by-id/virtio-etcd-data", "/var/lib/etcd"]


runcmd:
  # Скачивание базовых бинарей для сетапа кластера
  - chmod -R 700 /var/lib/etcd
  - wget -O /usr/bin/key-keeper   "https://storage.yandexcloud.net/m.images/key-keeper-T2?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=YCAJEhOlYpv1GRY7hghCojNX5%2F20221020%2Fru-central1%2Fs3%2Faws4_request&X-Amz-Date=20221020T123413Z&X-Amz-Expires=2592000&X-Amz-Signature=138701723B70343E38D82791A28AD1DB87040677F7C94D83610FF26ED9AF1954&X-Amz-SignedHeaders=host"
  - wget -O /usr/bin/kubectl       ${release_vars[actual_release].kubectl.url}
  - wget -O /usr/bin/kubelet       ${release_vars[actual_release].kubelet.url}
  - wget -O /usr/bin/runc          ${release_vars[actual_release].runc.url}
  - wget -O /tmp/etcd.tar.gz       https://github.com/etcd-io/etcd/releases/download/v3.5.5/etcd-v3.5.5-linux-amd64.tar.gz
  - wget -O /tmp/cni.tar.gz        ${release_vars[actual_release].cni.url}
  - wget -O /tmp/containerd.tar.gz ${release_vars[actual_release].containerd.url}
  - wget -O /tmp/crictl.tar.gz     ${release_vars[actual_release].crictl.url}
  # Раскидывание бинарей по диррректориям
  - chmod +x /usr/bin/key-keeper 
  - chmod +x /usr/bin/kubelet 
  - chmod +x /usr/bin/kubectl 
  - chmod +x /usr/bin/runc
  - mkdir -p /opt/cni/bin
  - mkdir -p /tmp/containerd
  - mkdir -p /tmp/etcd
  - tar -C "/tmp/etcd"        -xvf /tmp/etcd.tar.gz
  - tar -C "/tmp/containerd"  -xvf /tmp/containerd.tar.gz
  - tar -C "/opt/cni/bin"     -xvf /tmp/cni.tar.gz
  - tar -C "/usr/bin"         -xvf /tmp/crictl.tar.gz
  - cp /tmp/etcd/etcd*/etcdctl /usr/bin/
  - cp /tmp/containerd/bin/*   /usr/bin/
  # Старт всех сервисов и автозапуск при старте системы
  - systemctl daemon-reload
  - systemctl enable  kubelet.service
  - systemctl enable  containerd.service
  - systemctl start   kubelet.service
  - systemctl start   containerd.service
  - systemctl enable  key-keeper.service
  - systemctl start   key-keeper.service
  # Fix kubelet.config:resolvConf
  - systemctl enable  systemd-resolved.service
  - systemctl start   systemd-resolved.service

write_files:

####### Настройка key-keeper ###########################
###--->

  - path: /var/lib/key-keeper/bootstrap.token
    owner: root:root
    permissions: '0644'
    content: |
      ${indent(6, bootstrap_token_all)}
      