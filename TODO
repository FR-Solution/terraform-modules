#cloud-config
version: v1

hostname: master-0-default
users:
  - name: dkot
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    shell: /bin/bash
    lock_passwd: true
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBKp0G8Vlyi9XgxoL9xA20sY+Vc4szJ5PnP3BpAyaThtEIPtz/6w8DYy1qMGR5lq2MtjHKo0ghApCEM78rZf8PMR/EFW5hOeZzgiHZZVOUIThDwNAk9XQHKG+6OOS5+gpv+VLB3DTXxlPJsGdiI3/SBTmMfUCDZVR6LA94Uh5tgNypPqRRIv65tW0KbGjsYnMQxKFvO9lMHeFtJm1bAsb/+dbm1MafWYXg3yEGr6pyiHgaiwYgx2sKtIVqkg8IYNxLXzjIyS4kwB/WCkv3CEEIDL8KIi+HGnfv2tFzvtjwLgz2rtG73tVLzvjuplwG24Fx5vgCcTnWfFvAWiG5r8+IaHZ9ZvO9TOeAlOAWjB3ieHjA5ZS3R9J3WOAlfAQCA5jz6i2tFxAtIPBdWL0ZzYKUVLR561qd1AY5v9akqhquVIZqsJMzaLdCg0eoLNNdKgdQLXJohMPlqR96lR+mbym7UI/Fn7FvURibRgb781Z86ALfeYVHLYidVkrmhuuHzuU= dk@dobry-kot-system


packages:
  - wget
  - jq
  - tree
  - irqbalance
  - net-tools
  - socat 
  - conntrack
  - ipset
  - ethtool
  - unzip
  - xfsprogs

# https://kubernetes.io/docs/setup/production-environment/container-runtimes/
bootcmd:
  - sudo modprobe overlay
  - sudo modprobe br_netfilter
  - sudo sysctl --system

# Проверялось только для Yandex Cloud
# device_aliases: {'etcd-data': '/dev/disk/by-id/virtio-etcd-data'}

disk_setup:
  /dev/disk/by-id/virtio-etcd-data:
    table_type: 'gpt'
    overwrite: true

fs_setup:
  - label: etcd_data
    filesystem: 'ext4'
    device: /dev/disk/by-id/virtio-etcd-data
    partition: auto
    overwrite: true

### TODO 
### {\"level\":\"warn\",\"ts\":\"2022-10-17T00:44:38.354Z\",\"caller\":\"etcdmain/etcd.go:446\",\"msg\":\"found invalid file under data directory\",\"filename\":\"lost+found\",\"data-dir\":\"/var/lib/etcd\"}
### {\"level\":\"warn\",\"ts\":\"2022-10-17T00:44:38.354Z\",\"caller\":\"embed/config.go:848\",\"msg\":\"ignoring peer auto TLS since certs given\"}
### {\"level\":\"warn\",\"ts\":1665967478.3572063,\"caller\":\"fileutil/fileutil.go:57\",\"msg\":\"check file permission\",\"error\":\"directory \\\"/var/lib/etcd\\\" exist, but the permission is \\\"drwxr-xr-x\\\". The recommended permission is \\\"-rwx------\\\" to prevent possible unprivileged access to the data\"}

mounts:
  - [ \"/dev/disk/by-id/virtio-etcd-data\", \"/var/lib/etcd\"]


runcmd:
  # Скачивание базовых бинарей для сетапа кластера
  - chmod -R 700 /var/lib/etcd
  - wget -O /usr/bin/key-keeper   \"https://storage.yandexcloud.net/m.images/key-keeper-T2?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=YCAJEhOlYpv1GRY7hghCojNX5%2F20221020%2Fru-central1%2Fs3%2Faws4_request&X-Amz-Date=20221020T123413Z&X-Amz-Expires=2592000&X-Amz-Signature=138701723B70343E38D82791A28AD1DB87040677F7C94D83610FF26ED9AF1954&X-Amz-SignedHeaders=host\"
  - wget -O /usr/bin/kubectl       https://storage.googleapis.com/kubernetes-release/release/v1.22.7/bin/linux/amd64/kubectl
  - wget -O /usr/bin/kubelet       https://storage.googleapis.com/kubernetes-release/release/v1.22.7/bin/linux/amd64/kubelet
  - wget -O /usr/bin/runc          https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
  - wget -O /tmp/etcd.tar.gz       https://github.com/etcd-io/etcd/releases/download/v3.5.5/etcd-v3.5.5-linux-amd64.tar.gz
  - wget -O /tmp/cni.tar.gz        https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
  - wget -O /tmp/containerd.tar.gz https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz
  - wget -O /tmp/crictl.tar.gz     https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz
  # Раскидывание бинарей по диррректориям
  - chmod +x /usr/bin/key-keeper 
  - chmod +x /usr/bin/kubelet 
  - chmod +x /usr/bin/kubectl 
  - chmod +x /usr/bin/runc
  - mkdir -p /opt/cni/bin
  - mkdir -p /tmp/containerd
  - mkdir -p /tmp/etcd
  - tar -C \"/tmp/etcd\"        -xvf /tmp/etcd.tar.gz
  - tar -C \"/tmp/containerd\"  -xvf /tmp/containerd.tar.gz
  - tar -C \"/opt/cni/bin\"     -xvf /tmp/cni.tar.gz
  - tar -C \"/usr/bin\"         -xvf /tmp/crictl.tar.gz
  - cp /tmp/etcd/etcd*/etcdctl /usr/bin/
  - cp /tmp/containerd/bin/*   /usr/bin/
  # Старт всех сервисов и автозапуск при старте системы
  - systemctl daemon-reload
  - systemctl enable  kubelet.service
  - systemctl enable  containerd.service
  - systemctl start   kubelet.service
  - systemctl start   containerd.service
  - systemctl enable  key-keeper.service
  - systemctl start   key-keeper.service
  # Fix kubelet.config:resolvConf
  - systemctl enable  systemd-resolved.service
  - systemctl start   systemd-resolved.service

write_files:

####### Настройка key-keeper ###########################
###--->

  - path: /var/lib/key-keeper/bootstrap.token
    owner: root:root
    permissions: '0644'
    content: |
      hvs.CAESIKChkmGC_5lTUqZRq452mCEo3cdGiAULzHQpitEPCn4pGh4KHGh2cy5yN2ExaWlVMGNvRFlZeUdBQW5mTlUyc2Y
      


####### KUBECONFIGS для подключения к кластеру
  - path: /etc/kubernetes/kube-scheduler/kubeconfig
    owner: root:root
    permissions: '0644'
    content: |
      ---
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority: /etc/kubernetes/pki/ca/kubernetes-ca.pem
          server: https://127.0.0.1:443
        name: kubernetes
      contexts:
      - context:
          cluster: kubernetes
          namespace: default
          user: kube-apiserver
        name: kube-apiserver@kubernetes
      current-context: kube-apiserver@kubernetes
      kind: Config
      preferences: {}
      users:
      - name: kube-apiserver
        user:
          client-certificate: /etc/kubernetes/pki/certs/kube-scheduler/kube-scheduler-client.pem
          client-key: /etc/kubernetes/pki/certs/kube-scheduler/kube-scheduler-client-key.pem
      

  - path: /etc/kubernetes/kube-controller-manager/kubeconfig
    owner: root:root
    permissions: '0644'
    content: |
      ---
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority: /etc/kubernetes/pki/ca/kubernetes-ca.pem
          server: https://127.0.0.1:443
        name: kubernetes
      contexts:
      - context:
          cluster: kubernetes
          namespace: default
          user: kube-controller-manager
        name: kube-controller-manager@kubernetes
      current-context: kube-controller-manager@kubernetes
      kind: Config
      preferences: {}
      users:
      - name: kube-controller-manager
        user:
          client-certificate: /etc/kubernetes/pki/certs/kube-controller-manager/kube-controller-manager-client.pem
          client-key: /etc/kubernetes/pki/certs/kube-controller-manager/kube-controller-manager-client-key.pem
      

  - path: /etc/kubernetes/kube-apiserver/kubeconfig
    owner: root:root
    permissions: '0644'
    content: |
      ---
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority: /etc/kubernetes/pki/ca/kubernetes-ca.pem
          server: https://127.0.0.1:443
        name: kubernetes
      contexts:
      - context:
          cluster: kubernetes
          namespace: default
          user: kube-apiserver
        name: kube-apiserver@kubernetes
      current-context: kube-apiserver@kubernetes
      kind: Config
      preferences: {}
      users:
      - name: kube-apiserver
        user:
          client-certificate: /etc/kubernetes/pki/certs/kubelet/kubelet-client.pem
          client-key: /etc/kubernetes/pki/certs/kubelet/kubelet-client-key.pem
      

  - path: /etc/kubernetes/kubelet/kubeconfig
    owner: root:root
    permissions: '0644'
    content: |
      ---
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority: /etc/kubernetes/pki/ca/kubernetes-ca.pem
          server: https://127.0.0.1:443
        name: kubernetes
      contexts:
      - context:
          cluster: kubernetes
          namespace: default
          user: kubelet
        name: kubelet@kubernetes
      current-context: kubelet@kubernetes
      kind: Config
      preferences: {}
      users:
      - name: kubelet
        user:
          client-certificate: /etc/kubernetes/pki/certs/kube-apiserver/kube-apiserver-kubelet-client.pem
          client-key: /etc/kubernetes/pki/certs/kube-apiserver/kube-apiserver-kubelet-client-key.pem
   
